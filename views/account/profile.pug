extends ../layout

block content
  .pb-2.mt-2.mb-4.border-bottom
    h3 Profile Information

  form(action='/account/profile', method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='email') Email
      .col-md-7
        input#email.form-control(type='email', name='email', value=user.email, autocomplete='email', required)
      .offset-sm-3.col-md-7.pl-3.mb-2
        if user.emailVerified
          .text-success.font-italic
            | Verified
        else
          .text-danger.font-italic
            | Unverified: &nbsp;
            a(href='/account/verify') Send verification email
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='name') Name
      .col-md-7.mt-2
        input#name.form-control(type='text', name='name', value=user.profile.name, autocomplete='name')
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right Gender
      .col-sm-6.mt-2
        .form-check.form-check-inline
          input.form-check-input(type='radio', checked=user.profile.gender == 'male', name='gender', value='male', data-toggle='radio')
          label.form-check-label Male

        .form-check.form-check-inline
          input.form-check-input(type='radio', checked=user.profile.gender == 'female', name='gender', value='female', data-toggle='radio')
          label.form-check-label Female

        .form-check.form-check-inline
          input.form-check-input(type='radio', checked=user.profile.gender == 'other', name='gender', value='other', data-toggle='radio')
          label.form-check-label Other
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='location') Location
      .col-md-7.mb-2
        input#location.form-control(type='text', name='location', value=user.profile.location, autocomplete)
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='website') Website
      .col-md-7.mb-2
        input#website.form-control(type='text', name='website', value=user.profile.website, autocomplete='url')
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right Profile Picture
      .col-sm-4.mb-2
        img.profile(src=user.profile.picture ? user.profile.picture : user.gravatar(), width='100', height='100')
    .form-group
      .offset-sm-3.col-md-7.pl-2
        button.btn.btn.btn-primary(type='submit')
          i.fas.fa-pencil-alt.fa-sm.iconpadding
          | Update Profile

  .pb-2.mt-2.mb-4.border-bottom
    h3 Change Password

  form(action='/account/password', method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='password') New Password
      .col-md-7.mb-2
        input#password.form-control(type='password', name='password', autocomplete='new-password', minlength='8', required)
    .form-group.row
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='confirmPassword') Confirm Password
      .col-md-7.mb-2
        input#confirmPassword.form-control(type='password', name='confirmPassword', autocomplete='new-password', minlength='8', required)
    .form-group
      .offset-sm-3.col-md-7.pl-2
        button.btn.btn-primary(type='submit')
          i.fas.fa-lock.fa-sm.iconpadding
          | Change Password

  .pb-2.mt-2.mb-4.border-bottom
    h3 Logout Everywhere

  form(action='/account/logout-everywhere', method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    .form-group
      p.offset-sm-3.col-md-7.pl-2 This will log you out of all devices and locations.

      .offset-sm-3.col-md-7.pl-2
        button.btn.btn-danger(type='submit')
          i.fas.fa-sm.iconpadding.fa-sign-out-alt
          | Logout everywhere

  .pb-2.mt-2.mb-4.border-bottom
    h3 Two-Factor Authentication

  .form-group
    .offset-sm-3.col-md-7.pl-2
      if user.twoFactorEnabled
        .alert.alert-success
          i.fas.fa-shield-alt.me-2
          | Two-factor authentication is enabled
        form(action='/account/2fa/disable', method='POST', onsubmit='return confirm(\'Are you sure you want to disable 2FA?\');')
          input(type='hidden', name='_csrf', value=_csrf)
          .mb-3
            label.form-label(for='disable2faToken') Enter your authentication code to disable 2FA:
            input.form-control(type='text' name='token' id='disable2faToken' placeholder='123456 or backup code' maxlength='8' required)
          button.btn.btn-warning(type='submit')
            i.fas.fa-times.fa-sm.iconpadding
            | Disable 2FA
      else
        .alert.alert-warning
          i.fas.fa-exclamation-triangle.me-2
          | Two-factor authentication is not enabled
        a.btn.btn-success(href='/account/2fa/setup')
          i.fas.fa-shield-alt.fa-sm.iconpadding
          | Enable 2FA

  .pb-2.mt-2.mb-4.border-bottom
    h3 Biometric Login

  .form-group
    .offset-sm-3.col-md-7.pl-2
      if user.webAuthnCredentials && user.webAuthnCredentials.length > 0
        .alert.alert-success
          i.fas.fa-fingerprint.me-2
          | Biometric login is enabled
        .mb-3
          h6 Registered Devices:
          each credential in user.webAuthnCredentials
            .d-flex.justify-content-between.align-items-center.border.rounded.p-2.mb-2
              div
                i.fas.fa-fingerprint.me-2
                | Device registered on #{new Date(credential.createdAt).toLocaleDateString()}
              form.d-inline(action='/account/webauthn/remove', method='POST', onsubmit='return confirm(\'Remove this biometric credential?\');')
                input(type='hidden', name='_csrf', value=_csrf)
                input(type='hidden', name='credentialId', value=credential.id)
                button.btn.btn-sm.btn-outline-danger(type='submit')
                  i.fas.fa-trash.fa-sm
        button.btn.btn-primary#addBiometric
          i.fas.fa-plus.fa-sm.iconpadding
          | Add New Device
      else
        .alert.alert-info
          i.fas.fa-info-circle.me-2
          | Biometric login is not set up
        button.btn.btn-success#setupBiometric
          i.fas.fa-fingerprint.fa-sm.iconpadding
          | Setup Biometric Login

  .pb-2.mt-2.mb-4.border-bottom
    h3 Delete Account

  form(action='/account/delete', method='POST', onsubmit='return confirm(\'Are you sure you want to delete your account?\');')
    .form-group
      p.offset-sm-3.col-md-7.pl-2 You can delete your account, but keep in mind this action is irreversible.
      input(type='hidden', name='_csrf', value=_csrf)
      .offset-sm-3.col-md-7.pl-2
        button.btn.btn-danger(type='submit')
          i.fas.fa-trash-alt.fa-sm.iconpadding
          | Delete my account

  .pb-2.mt-2.mb-4.border-bottom
    h3 Linked Accounts
  .form-group
    .offset-sm-3.col-md-7.pl-2
      if user.discord
        p.mb-1: a.text-danger(href='/account/unlink/discord') Unlink your Discord account
      else
        p.mb-1: a(href='/auth/discord') Link your Discord account
    .offset-sm-3.col-md-7.pl-2
      if user.facebook
        p.mb-1: a.text-danger(href='/account/unlink/facebook') Unlink your Facebook account
      else
        p.mb-1: a(href='/auth/facebook') Link your Facebook account
    .offset-sm-3.col-md-7.pl-2
      if user.github
        p.mb-1: a.text-danger(href='/account/unlink/github') Unlink your GitHub account
      else
        p.mb-1: a(href='/auth/github') Link your GitHub account
    .offset-sm-3.col-md-7.pl-2
      if user.google
        p.mb-1: a.text-danger(href='/account/unlink/google') Unlink your Google account
      else
        p.mb-1: a(href='/auth/google') Link your Google account
    .offset-sm-3.col-md-7.pl-2
      if user.linkedin
        p.mb-1: a.text-danger(href='/account/unlink/linkedin') Unlink your LinkedIn account
      else
        p.mb-1: a(href='/auth/linkedin') Link your LinkedIn account
    .offset-sm-3.col-md-7.pl-2
      if user.quickbooks
        p.mb-1: a.text-danger(href='/account/unlink/quickbooks') Unlink your QuickBooks account
      else
        p.mb-1: a(href='/auth/quickbooks') Link your QuickBooks account
    .offset-sm-3.col-md-7.pl-2
      if user.steam
        p.mb-1: a.text-danger(href='/account/unlink/steam') Unlink your Steam account
      else
        p.mb-1: a(href='/auth/steam') Link your Steam account
    .offset-sm-3.col-md-7.pl-2
      if user.trakt
        p.mb-1: a.text-danger(href='/account/unlink/trakt') Unlink your Trakt account
      else
        p.mb-1: a(href='/auth/trakt') Link your Trakt account
    .offset-sm-3.col-md-7.pl-2
      if user.tumblr
        p.mb-1: a.text-danger(href='/account/unlink/tumblr') Unlink your Tumblr account
      else
        p.mb-1: a(href='/auth/tumblr') Link your Tumblr account
    .offset-sm-3.col-md-7.pl-2
      if user.twitch
        p.mb-1: a.text-danger(href='/account/unlink/twitch') Unlink your Twitch account
      else
        p.mb-1: a(href='/auth/twitch') Link your Twitch account
    .offset-sm-3.col-md-7.pl-2
      if user.x
        p.mb-1: a.text-danger(href='/account/unlink/x') Unlink your X account
      else
        p.mb-1: a(href='/auth/x') Link your X account

  script(src='https://unpkg.com/@simplewebauthn/browser/dist/bundle/index.umd.min.js')
  script.
    const { startRegistration } = SimpleWebAuthnBrowser;
    
    // Setup biometric login
    document.getElementById('setupBiometric')?.addEventListener('click', async function() {
      await registerBiometric();
    });
    
    // Add new biometric device
    document.getElementById('addBiometric')?.addEventListener('click', async function() {
      await registerBiometric();
    });
    
    async function registerBiometric() {
      try {
        // Get registration options from server
        const resp = await fetch('/account/webauthn/register');
        const options = await resp.json();
        
        if (!resp.ok) {
          throw new Error(options.error || 'Failed to get registration options');
        }
        
        // Start registration
        const attResp = await startRegistration(options);
        
        // Send response to server
        const verificationResp = await fetch('/account/webauthn/register', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(attResp),
        });
        
        const verificationJSON = await verificationResp.json();
        
        if (verificationJSON.verified) {
          alert('Biometric login has been set up successfully!');
          location.reload();
        } else {
          throw new Error('Failed to verify registration');
        }
      } catch (error) {
        console.error('Registration failed:', error);
        alert('Failed to set up biometric login: ' + error.message);
      }
    }
