extends ../layout

block content
  .pb-2.mt-2.mb-4.border-bottom
    h3 Sign in
  form(method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    .form-group.row.mb-3
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='email') Email
      .col-md-7
        input#email.form-control(type='email', name='email', placeholder='Email', autofocus, autocomplete='email', required)
    .form-group.row.mb-3
      .col-md-3.offset-md-3
        .form-check
          input#loginByEmailLink.form-check-input(type='checkbox', name='loginByEmailLink')
          label.form-check-label(for='loginByEmailLink') Login by Email Link
    .form-group.row.mb-3.password-group
      label.col-md-3.col-form-label.font-weight-bold.text-right(for='password') Password
      .col-md-7
        input#password.form-control(type='password', name='password', placeholder='Password', autocomplete='current-password', required)
    .form-group.row
      .col-md-7.offset-md-3
        button.col-md-2.btn.btn-primary(type='submit')
          i.far.fa-user.fa-sm.iconpadding
          | Login
        button.btn.btn-outline-primary.ms-2#biometricLogin(type='button')
          i.fas.fa-fingerprint.fa-sm.iconpadding
          | Biometric Login
        a.btn.btn-link(href='/forgot') Forgot your password?
    .form-group.row
      .col-md-7.offset-md-3.d-grid.gap-2
        hr
    .form-group.row
      .col-md-3.offset-md-3.d-grid.gap-2
        a.btn.btn-block.btn-google.btn-social(href='/auth/google')
          i.fab.fa-google.fa-xs
          | Sign in with Google
        a.btn.btn-block.btn-facebook.btn-social(href='/auth/facebook')
          i.fab.fa-facebook-f.fa-sm
          | Sign in with Facebook
        a.btn.btn-block.btn-twitter.btn-social(href='/auth/x')
          i.fab.fa-x-twitter.fa-sm
          | Sign in with X
        a.btn.btn-block.btn-linkedin.btn-social(href='/auth/linkedin')
          i.fab.fa-linkedin-in.fa-sm
          | Sign in with LinkedIn
        a.btn.btn-block.btn-twitch.btn-social(href='/auth/twitch')
          i.fab.fa-twitch.fa-sm
          | Sign in with Twitch
        a.btn.btn-block.btn-github.btn-social(href='/auth/github')
          i.fab.fa-github.fa-sm
          | Sign in with GitHub
        a.btn.btn-block.btn-discord.btn-social(href='/auth/discord')
          i.fab.fa-discord
          | Sign in with Discord

  script.
    document.getElementById('loginByEmailLink').addEventListener('change', function () {
      const passwordGroup = document.querySelector('.password-group');
      const passwordInput = document.getElementById('password');
      if (this.checked) {
        passwordGroup.style.display = 'none';
        passwordInput.removeAttribute('required');
        // Don't clear the password here
      } else {
        passwordGroup.style.display = 'flex';
        passwordInput.setAttribute('required', '');
      }
    });

    // Only clear password at form submission if email link is selected
    document.querySelector('form').addEventListener('submit', function (e) {
      if (document.getElementById('loginByEmailLink').checked) {
        document.getElementById('password').value = '';
      }
    });

  script(src='https://unpkg.com/@simplewebauthn/browser/dist/bundle/index.umd.min.js')
  script.
    const { startAuthentication } = SimpleWebAuthnBrowser;
    
    // Biometric login
    document.getElementById('biometricLogin').addEventListener('click', async function() {
      const email = document.getElementById('email').value;
      
      if (!email) {
        alert('Please enter your email address first');
        document.getElementById('email').focus();
        return;
      }
      
      try {
        // Get authentication options from server
        const resp = await fetch(`/account/webauthn/authenticate?email=${encodeURIComponent(email)}`);
        const options = await resp.json();
        
        if (!resp.ok) {
          throw new Error(options.error || 'Failed to get authentication options');
        }
        
        // Start authentication
        const authResp = await startAuthentication(options);
        
        // Send response to server
        const verificationResp = await fetch('/account/webauthn/authenticate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(authResp),
        });
        
        const verificationJSON = await verificationResp.json();
        
        if (verificationJSON.verified) {
          if (verificationJSON.requires2FA) {
            // Redirect to 2FA verification
            window.location.href = '/account/2fa/verify';
          } else {
            // Login successful, redirect to home
            window.location.href = '/';
          }
        } else {
          throw new Error('Authentication failed');
        }
      } catch (error) {
        console.error('Biometric login failed:', error);
        alert('Biometric login failed: ' + error.message);
      }
    });
